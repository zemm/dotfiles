
function git_changelog() {
	if ! git describe --tags &> /dev/null ; then
		echo "Error: no git tags"
		return 1
	fi

	git log --pretty=format:"- %s%n  [%an]" "`git describe --tags|grep -o '^[^-]*'`"..HEAD;
}

function git_changelog_write() {
	local CHANGELOG=$1; shift
	if [ -z "$CHANGELOG" ] || ! [ -f $CHANGELOG ]; then
		echo "usage: $FUNCNAME CHANGELOG.txt"
		return 1
	fi

	#local FROM=6
	#local TO=8
	local FROM=3
	local TO=5

	head -n $FROM "$CHANGELOG" >> "${CHANGELOG}.new" \
		&& git_changelog >> "${CHANGELOG}.new" \
		&& tail -n +$TO "$CHANGELOG" >> "${CHANGELOG}.new" \
		&& mv "${CHANGELOG}.new" "$CHANGELOG";
}

function hg_changelog() {
	hg log --template "- {desc}\n  [{author|person}]\n" -r tip:"`hg tags|head -n 2|tail -n 1|grep -o '^\S*'`";
}

function hg_changelog_write() {
	local CHANGELOG=$1; shift
	if [ -z "$CHANGELOG" ] || ! [ -f $CHANGELOG ]; then
		echo "usage: $FUNCNAME CHANGELOG.txt"
		return 1
	fi

	head -n 6 $CHANGELOG >> $CHANGELOG.new \
		&& hg_changelog >> $CHANGELOG.new \
		&& tail -n +8 $CHANGELOG >> $CHANGELOG.new \
		&& mv $CHANGELOG.new $CHANGELOG;
}
